name: CMake on multiple platforms

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:  # Manual trigger

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Perl on Ubuntu
        if: startsWith(matrix.os, 'ubuntu-latest')
        run: |
          sudo apt update
          sudo apt install -y perl

      - name: Install CMake on Ubuntu
        if: startsWith(matrix.os, 'ubuntu-latest')
        run: |
          curl -LO https://github.com/Kitware/CMake/releases/download/v3.22.0/cmake-3.22.0-Linux-x86_64.sh
          mkdir -p $HOME/cmake
          bash cmake-3.22.0-Linux-x86_64.sh --prefix=$HOME/cmake --skip-license
          export PATH=$HOME/cmake/bin:$PATH

      - name: Install CMake on Windows
        if: startsWith(matrix.os, 'windows-latest')
        run: |
          curl -LO https://github.com/Kitware/CMake/releases/download/v3.22.0/cmake-3.22.0-windows-x86_64.zip
          Expand-Archive -Path cmake-3.22.0-windows-x86_64.zip -DestinationPath 'C:\Program Files\CMake'
          del cmake-3.22.0-windows-x86_64.zip
          setx -m PATH "%PATH%;C:\Program Files\CMake\bin"

      # Add your remaining steps here for both Ubuntu and Windows platforms

  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Generate release notes
        id: release_notes
        run: |
          # Fetch the list of merges since the last release
          git fetch --depth=1 origin main
          git log --merges --format='%B' $(git describe --tags --abbrev=0)..HEAD > release_notes.md
        
      - name: Log into Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          #context: .
          file: ./Dockerfile
          push: true
          tags: |
            vkonkathi/helloworld:latest
            vkonkathi/helloworld:${{ github.sha }}
