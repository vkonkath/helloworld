name: CMake on multiple platforms

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:  # Manual trigger

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: ubuntu-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl

    steps:
    - uses: actions/checkout@v3

    # Download and extract Perl
    - name: Download and extract Perl
      run: |
        curl -OL https://www.cpan.org/src/5.0/perl-5.34.0.tar.gz
        tar -xzvf perl-5.34.0.tar.gz
        cd perl-5.34.0
        sh Configure -des -Dprefix=$HOME/perl
        make
        make install

  # Set Perl directory in PATH
    - name: Set Perl directory in PATH
      run: echo "PATH=\$PATH:$HOME/perl/bin" >> $GITHUB_ENV

  # Verify Perl installation
    - name: Verify Perl installation
      run: perl --version

    - name: Download and extract lcov
      run: |
        curl -OL https://github.com/linux-test-project/lcov/releases/download/v1.14/lcov-1.14.tar.gz
        tar -xzvf lcov-1.14.tar.gz
        mkdir -p lcov-bin
        mv lcov-1.14/bin/* lcov-bin/

    - name: Set lcov directory in PATH
      run: echo "PATH=\$PATH:$(pwd)/lcov-bin" >> $GITHUB_ENV

    - name: Verify lcov installation
      run: lcov --version

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }}

  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Log into Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: Dockerfile
        push: true
        tags: |
          vkonkathi/helloworld:latest
          vkonkathi/helloworld:${{ github.sha }}
