name: CMake on Ubuntu

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Install Perl
        run: |
          sudo apt update
          sudo apt install -y perl

      - name: Install lcov
        run: |
          sudo apt update
          sudo apt install -y lcov

      - name: Set lcov directory in PATH
        run: echo "PATH=\$PATH:/usr/bin" >> $GITHUB_ENV

      - name: Verify lcov installation
        run: lcov --version

      - name: Install CMake
        run: sudo apt-get install -y cmake

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          repository: vkonkath/helloworld
          fetch-depth: 0

      - name: List contents of the current directory
        run: dir -R
        
      - name: Go to repository directory
        run: cd $GITHUB_WORKSPACE || exit 1

      - name: Run unit tests
        run: |
          mkdir build
          cd build
          cmake ..
          cmake --build .
          ctest -C Debug
        id: run_unit_tests

      - name: Pump out logs and statistics generated by lcov
        run: |
          lcov --capture --directory . --output-file coverage.info
          lcov --remove coverage.info '/usr/*' '*/test/*' --output-file coverage.info.cleaned
          genhtml coverage.info.cleaned --output-directory coverage-html

      - name: Set output for run_unit_tests outcome
        if: always()
        run: echo "::set-output name=unit_tests_outcome::${{ job.status }}"

      - name: Generate release notes
        id: release_notes
        run: |
          latest_tag=$(git describe --tags --abbrev=0 --always)
          echo $latest_tag
          git log --format='%B' "$latest_tag..HEAD" > release_notes.txt
          cat release_notes.txt
          echo "::set-output name=release_notes::$(cat release_notes.txt)" 

      - name: Push release notes && ${{ steps.release_notes.outputs.release_notes }}!=''
        if: github.ref == 'refs/heads/main'
        run: |
          echo ${{ steps.release_notes.outputs.release_notes }}
          git config --global user.email "vkonkathi@gmail.com"
          git config --global user.name "vkonkathi"
          git add release_notes.txt
          git commit -m "Add release notes"
          git push --force origin main
          
  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          file: ./Dockerfile
          push: true
          tags: |
            vkonkathi/helloworld:latest
            vkonkathi/helloworld:${{ github.sha }}
