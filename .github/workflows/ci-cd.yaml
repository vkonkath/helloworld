name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up CMake
        uses: lukka/run-cmake@v1
        with:
          cmakeListsOrSettingsJson: CMakeLists.txt
          buildDirectory: build

      - name: Build project
        run: cmake --build build --config Release

      - name: Run tests
        run: cd build && ctest --output-on-failure

  publish_docker:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: docker build -t vkonkathi/helloworld .

      - name: Push Docker image
        run: docker push vkonkathi/helloworld

  tag_and_release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Generate release notes
        id: release_notes
        run: |
          git fetch --depth=1 origin master
          git log --format='%B' $(git describe --tags --abbrev=0)..HEAD > release_notes.txt

      - name: Create tag
        id: create_tag
        run: |
          latest_tag=$(git describe --tags --abbrev=0)
          tag="${latest_tag%.*}.$((${latest_tag##*.} + 1))"
          git tag $tag
          echo "::set-output name=tag::$tag"

      - name: Push tag to GitHub
        uses: mathieudutour/github-tag-action@v5
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.create_tag.outputs.tag }}

      - name: Create GitHub release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.create_tag.outputs.tag }}
          release_name: Release ${{ steps.create_tag.outputs.tag }}
          body_path: release_notes.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
